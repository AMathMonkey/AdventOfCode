procedure main()
    local input, lines := [], sum1 := 0, sum2 := 0, i, j
    input := open("input.txt")
    while line := read(input) do put(lines, line)
    every sum1 +:= countXMAS(!lines | getCols(lines) | getDiags(lines))
    every i := 2 to *lines - 1 do {
        every j := 2 to *lines[1] - 1 do {
            if lines[i, j] ~== "A" then next
            if lines[i - 1, j - 1] || lines[i + 1, j + 1] == ("MS" | "SM") then {
                if lines[i + 1, j - 1] || lines[i - 1, j + 1] == ("MS" | "SM") then sum2 +:= 1
            }
        }
    }
    write("Part 1: ", sum1, "\nPart 2: ", sum2)
end

procedure countXMAS(str)
    local result := 0
    str ? every find("XMAS") do result +:= 1
    str ? every find("SAMX") do result +:= 1
    return result
end

procedure getCols(rows)
    local i, j, col
    every j := 1 to *rows[1] do {
        col := ""
        every i := 1 to *rows do col ||:= rows[i, j]
        suspend col
    }
end

procedure getDiags(rows)
    local startCol, startRow, col, row
    every startCol := 1 to *rows[1] do {
        str := ""
        col := startCol
        row := 1
        while col <= *rows[1] & row <= *rows do {
            str ||:= rows[row, col]
            row +:= 1
            col +:= 1
        }
        suspend str
    }
    every startRow := 2 to *rows do {
        str := ""
        row := startRow
        col := 1
        while col <= *rows[1] & row <= *rows do {
            str ||:= rows[row, col]
            row +:= 1
            col +:= 1
        }
        suspend str
    }
    every startRow := 1 to *rows do {
        str := ""
        col := 1
        row := startRow
        while col <= *rows[1] & row >= 1 do {
            str ||:= rows[row, col]
            row -:= 1
            col +:= 1
        }
        suspend str
    }
    every startCol := 2 to *rows[1] do {
        str := ""
        row := *rows
        col := startCol
        while col <= *rows[1] & row >= 1 do {
            str ||:= rows[row, col]
            row -:= 1
            col +:= 1
        }
        suspend str
    }
end